mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"^("))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"/("))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"//("))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\("))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]"))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21"))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age !8 ~ ranges))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges))
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges))
ggplot(pop2023club)+
geom_line(aes(x=age, y = n, colour = team), size = 1, alpha = 0.5)+
geom_line(data = pop2023comp, aes(x=age,y=n/10),colour = 'red', size = 2)+
scale_y_continuous(
breaks = c(0,2,4,6,8,10),
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges))
pop2023
pop2023_ranges
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges)) %>%
group_by(ranges) %>%
summarise(n = sum(n))
pop2023_ranges
ggplot(pop2023club)+
geom_line(aes(x=ranges, y = n, colour = team), size = 1, alpha = 0.5)+
geom_line(data = pop2023comp, aes(x=age,y=n/10),colour = 'red', size = 2)+
scale_y_continuous(
breaks = c(0,2,4,6,8,10),
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, colour = team), size = 1, alpha = 0.5)+
geom_line(data = pop2023comp, aes(x=age,y=n/10),colour = 'red', size = 2)+
scale_y_continuous(
breaks = c(0,2,4,6,8,10),
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
breaks = c(0,2,4,6,8,10),
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges)) %>%
group_by(ranges) %>%
summarise(n = sum(n))
pop2023_ranges
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 3)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges)) %>%
group_by(ranges) %>%
summarise(n = sum(n)) %>%
ungroup()
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_point(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = ranges), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_path(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 2)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-21",
age != 18 ~ ranges)) %>%
group_by(ranges) %>%
summarise(n = sum(n)) %>%
ungroup()
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 2)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-20",
age != 18 ~ ranges)) %>%
group_by(ranges) %>%
summarise(n = sum(n)) %>%
ungroup()
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(
name = "First Axis"
)
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(sec.axis = sec_axis(dup_axis())  )
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(sec.axis = sec_axis()  )
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(sec.axis = dup.axis())
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(sec.axis = dup_axis())
## Cohort construction
library(tidyverse)
library(ggplot2)
library(fitzRoy)
library(glue)
library(patchwork)
library(lubridate)
aflplayers_afltables <- fitzRoy::fetch_player_details(source = 'afltables',
current = FALSE)
today <- lubridate::as_date(Sys.Date())
pop2023 <- fitzRoy::fetch_player_details()%>%
mutate(age = trunc((dateOfBirth %--% today) / years(1)))
pop2023club <-
pop2023 %>%
select(team,age)%>%
group_by(team,age)%>%
add_count(age) %>%
unique() %>%
group_by(team)%>%
complete(age = seq(min(pop2023$age), max(pop2023$age)),fill = list(n = 0)) %>%
ungroup()
pop2023comp <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
mutate(pct_teams = n/18)%>%
unique() %>%
ungroup()
pop2023_ranges <-
pop2023 %>%
select(age)%>%
group_by(age)%>%
add_count(age) %>%
unique() %>%
mutate(ranges = as.character(cut(age, seq(18,36, by = 2)))) %>%
mutate(ranges = str_replace(ranges, ",","-"),
ranges = str_remove(ranges,"\\("),
ranges = str_remove(ranges,"\\]")) %>%
mutate(ranges = case_when(age == 18 ~ "18-20",
age != 18 ~ ranges)) %>%
group_by(ranges) %>%
summarise(n = sum(n)) %>%
ungroup()
ggplot(pop2023_ranges)+
geom_line(aes(x=ranges, y = n, group = 1), size = 1, alpha = 0.5)+
scale_y_continuous(sec.axis = dup_axis())
ggplot(pop2023club)+
geom_line(aes(x=age, y = n, colour = team), size = 1, alpha = 0.5)+
geom_line(data = pop2023comp, aes(x=age,y=n/10),colour = 'red', size = 2)+
scale_y_continuous(
breaks = c(0,2,4,6,8,10),
name = "First Axis",
sec.axis = sec_axis(~.*10)
)
library(fitzRoy)
fetch_player_stats_afl()
install.packages('fitzRoy')
install.packages("fitzRoy")
detach("package:fitzRoy", unload = TRUE)
install.packages('fitzRoy')
library(fitzRoy)
fetch_player_stats_afl(season = 2022)
test<- fetch_player_stats_afl(season = 2022)
View(test)
install.packages('fitzRoy')
install.packages("fitzRoy")
install.packages("Rtools")
library(fitzRoy)
fitzRoy::get_afl_colour_palettes
fitzRoy::get_afl_colour_palettes()
get_afl_colour_palettes()
library(fitzRoy)
get_afl_colour_palettes()
fitzRoy::fetch_player_stats(season = 2022)
test <- fitzRoy::fetch_player_stats(season = 2022)
test2 <- fitzRoy::fetch_player_details_afl(season = 2022)
test2 <- fitzRoy::fetch_player_details_afl()
test2 <- fitzRoy::fetch_player_details_afl(season = 1992)
test2 <- fitzRoy::fetch_player_details_afl(season = 1993)
test2 <- fitzRoy::fetch_player_details_afl(season = 2001)
test2 <- fitzRoy::fetch_player_details_afl(season = 2010)
test2 <- fitzRoy::fetch_player_details_afl(season = 2021)
test2 <- fitzRoy::fetch_player_details_afl(season = 2018)
test2 <- fitzRoy::fetch_player_details_afl(current = FALSE)
test2 <- fitzRoy::fetch_player_details(current = FALSE)
View(test2)
View(test)
View(test2)
require(httr)
require(jsonlite)
require(dplyr)
require(lubridate)
### USER FUNCTION
get_match_chains <- function(season = year(Sys.Date()), round = NA) {
if(season < 2021) {
stop("Match chain data is not available for seasons prior to 2021.")
}
if (is.na(round)) {
cat("No round value supplied.\nFunction will scrape all rounds in the season.\nThis may take some time.\n")
games <- get_season_games(season)
}
else
games <- get_round_games(season,round)
if(length(games) == 0) {
stop("No data available for the season or round selected.")
}
cat("\nScraping match chains...\n\n")
chains <- get_many_game_chains(games)
players <- get_players()
chains <- inner_join(chains, games, by = "matchId")
chains <- left_join(chains, players, by = "playerId")
chains <- chains %>% select(season,roundNumber,homeTeam.teamName:date,venue.name,venueWidth:homeTeamDirectionQtr1,displayOrder,chain_number,initialState,finalState,period,periodSeconds,playerName.givenName:team.teamName,description,disposal:y)
cat("\n\nSuccess!\n\n")
return(chains)
}
### API SCRAPING FUNCTIONS
get_token <- function() {
response <- POST("https://api.afl.com.au/cfs/afl/WMCTok")
token <- content(response)$token
return(token)
}
access_api <- function(url) {
token <- get_token()
response <- GET(
url = url,
add_headers("x-media-mis-token" = token))
content <- response %>%
content(as = "text", encoding = "UTF-8") %>%
fromJSON(flatten = TRUE)
return(content)
}
### MATCH DATA FUNCTIONS
get_round_games <- function(season,round) {
round <- ifelse(round < 10, paste0("0",round), round)
url <- paste0("https://api.afl.com.au/cfs/afl/fixturesAndResults/season/CD_S",season,"014/round/CD_R",season,"014",round)
games <- access_api(url)
games <- games[[5]]
if (length(games) > 0) {
games <- games %>% filter(status == "CONCLUDED")
if (nrow(games) > 0) {
games <- games %>% select(matchId,utcStartTime,roundNumber,venue.name,homeTeam.teamName,awayTeam.teamName,homeTeamScore.totalScore,awayTeamScore.totalScore)
games$date <- substr(games$utcStartTime, 1, 10)
games$date <- as.Date(games$utcStartTime)
games$season <- year(games$utcStartTime)
return(games)
}
}
}
get_season_games <- function(season) {
games <- get_round_games(season,1)
for (i in 2:30) {
new <- get_round_games(season,i)
games <- bind_rows(games, new)
}
return(games)
}
### PLAYER DATA FUNCTIONS
get_players <- function() {
url <- paste0("https://api.afl.com.au/cfs/afl/players")
players <- access_api(url)
players <- players[[5]]
players <- players %>% select(playerId,playerName.givenName,playerName.surname,team.teamName)
return(players)
}
### CHAIN DATA FUNCTIONS
get_many_game_chains <- function(games) {
pb <- txtProgressBar(max = nrow(games), style = 3, width = 50, char = ">")
pb %>% getTxtProgressBar()
chains <- get_game_chains(games[[1,1]])
pb %>% setTxtProgressBar(value = 1)
pb %>% getTxtProgressBar()
if (nrow(games) > 1) {
for (i in 2:nrow(games)) {
new <- get_game_chains(games[[i,1]])
chains <- bind_rows(chains,new)
pb %>% setTxtProgressBar(value = i)
pb %>% getTxtProgressBar()
}
}
else
pb %>% setTxtProgressBar(value = 1)
return(chains)
}
get_game_chains <- function(match_id) {
url <- paste0("https://api.afl.com.au/cfs/afl/matchChains/",match_id)
chains_t1 <- access_api(url)
chains_t2 <- chains_t1[[8]]
chains <- get_single_chain(chains_t2,1)
for (i in 2:nrow(chains_t2)) {
new <- get_single_chain(chains_t2,i)
chains <- bind_rows(chains,new)
}
chains$matchId <- chains_t1$matchId
chains$venueWidth <- chains_t1$venueWidth
chains$venueLength <- chains_t1$venueLength
chains$homeTeamDirectionQtr1 <- chains_t1$homeTeamDirectionQtr1
return(chains)
}
get_single_chain <- function(chains_t2,chain_number) {
chains_t3 <- chains_t2[[chain_number,6]]
if(length(chains_t3 > 0)) {
chains_t3$finalState <- chains_t2$finalState[chain_number]
chains_t3$initialState <- chains_t2$initialState[chain_number]
chains_t3$period <- chains_t2$period[chain_number]
chains_t3$chain_number <- chain_number
return(chains_t3)
}
}
get_game_chains()
get_players()
get_match_chains()
Sys.time()
year(Sys.time())
## Cohort construction
library(tidyverse)
library(ggplot2)
library(fitzRoy)
library(glue)
library(patchwork)
library(lubridate)
year(Sys.time())
### Player data load and save
library(tidyverse)
library(ggplot2)
library(fitzRoy)
library(glue)
library(patchwork)
library(lubridate)
player_details <- fitzRoy::fetch_player_details(current = FALSE)
years <- c(2014:2023)
player_stats <- map_dfr(years,fetch_player_stats_afl)
player_stats <-
player_stats %>%
mutate(season = year(utcStartTime)) %>%
mutate(name = str_c(player.givenName,player.surname, sep = " "))
saveRDS(player_details, file = glue("data/player_details_year(Sys.time()).rds"))
saveRDS(player_stats, file = glue("data/player_details_year(Sys.time()).rds"))
pop2023club
pop2023 <- fitzRoy::fetch_player_details()%>%
mutate(age = trunc((dateOfBirth %--% today) / years(1)))
