Birth = "#009E73",
BirthDeath = "#E69F00",
Death = "#D55E00")
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 11,
colour = "black"),
plot.title  = element_text(size = 14, face = "bold"),
title = element_text(size = 12))+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))
anim1 <-
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status",
caption = "@BenCochraneR")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
plot.caption =  element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0), breaks = breaks_pretty(8))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))+
transition_time(season)+
ease_aes()
a1 <- animate(anim1, fps = 30, duration = 15, width = 700, height = 550, end_pause = 150)
anim_save('output/pop1.gif', animation = a1)
rolling_births_deaths <-
population_life %>% arrange(season)%>%
group_by(season,status)%>%
summarise(n = sum(n)) %>%
group_by(status) %>%
filter(status %in% c("Birth","Death")) %>%
mutate(nsum = cumsum(n))
anim2 <-
ggplot(rolling_births_deaths)+
geom_col(aes(x=status,y=nsum,fill = status))+
scale_fill_manual(values = fill_colours[c(2,4)])+
labs(x = "Population status",
y = "Cumulative number")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15))+
scale_y_continuous(expand = c(0,0),
breaks = breaks_pretty(10))+
transition_time(season)+
ease_aes()
a2 <- animate(anim2, fps = 30, duration = 15,width = 250, height = 550, end_pause = 150)
anim_save('output/pop2.gif', animation = a2)
a_mgif <- image_read(a1)
b_mgif <- image_read(a2)
new_gif <- image_append(c(a_mgif[1], b_mgif[1]))
for(i in 1:600){
combined <- image_append(c(a_mgif[i], b_mgif[i]))
new_gif <- c(new_gif, combined)
}
image_write(new_gif,path = "output/pop4.gif", format = 'gif')
## Cohort construction
library(tidyverse)
library(ggplot2)
library(fitzRoy)
library(glue)
library(patchwork)
library(lubridate)
library(gganimate)
library(transformr)
library(zoo)
library(magick)
library(scales)
player_details <- readRDS(file = "data/player_details_2022.rds")
player_stats <- readRDS(file = "data/player_stats_2022.rds")
today <- lubridate::as_date(Sys.Date())
population <- player_details %>%
mutate(age = trunc((dateOfBirth %--% today) / years(1))) %>%
mutate(age = age - (year(today) - season))
population_year_club <-
population %>%
group_by(team,season)%>%
add_count(age)%>%
unique() %>%
group_by(team)%>%
complete(age = seq(min(population$age), max(population$age)),fill = list(n = 0)) %>%
ungroup() %>%
select(team,season,age,n)
population_year <-
population %>%
group_by(season)%>%
add_count(age)%>%
group_by(season)%>%
complete(age = seq(min(population$age), max(population$age)),fill = list(n = 0)) %>%
unique() %>%
select(season,age,n) %>%
unique()
player_stats_afltables <- fitzRoy::fetch_player_details_afltables() %>%
select(Player,Games,Debut,Last) %>%
rename(name = Player) %>%
group_by(name) %>%
filter(Games == max(Games))
population_merged <-
population %>%
mutate(name = str_c(firstName,surname,sep = " "))%>%
left_join(player_stats_afltables, by = "name") %>%
mutate(Debut = gsub('[d|y]','',Debut),
Last = gsub('[d|y]','',Last))%>%
separate(Debut, c("debut_y","debut_d"))%>%
separate(Last, c("last_y","last_d")) %>%
mutate(across(starts_with('debut'), ~ as.numeric(.)),
across(starts_with('last'), ~ as.numeric(.)),
across(ends_with("_d"), ~ ./365)) %>%
mutate(debut = debut_y + debut_d,
last = last_y + last_d) %>%
select(-debut_y,-debut_d,-last_y,-last_d)
population_life <-
population %>%
mutate(name = str_c(firstName,surname,sep = " "))%>%
group_by(id)%>%
arrange(season)%>%
mutate(duplicated = duplicated(id)) %>%
mutate(status =
case_when(row_number()==1 ~ 'Birth',
row_number()==n() & season != "2023" ~ "Death",
TRUE ~ 'Alive')) %>%
mutate(status = case_when(n()==1 & season != "2023"  ~ "BirthDeath",
TRUE ~ status)) %>%
ungroup() %>%
group_by(season,age,status) %>%
summarise(n = n()) %>%
ungroup()%>%
complete(season,age,status,fill = list(n = 0)) %>%
select(age,season,status,n)%>%
unique() %>%
filter(season != "2014") %>%
ungroup()
fill_colours <- c(
Alive = "#0072B2",
Birth = "#009E73",
BirthDeath = "#E69F00",
Death = "#D55E00")
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 11,
colour = "black"),
plot.title  = element_text(size = 14, face = "bold"),
title = element_text(size = 12))+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))
anim1 <-
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status",
caption = "@BenCochraneR")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
plot.caption =  element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0), breaks = breaks_pretty(8))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))+
transition_time(season)+
ease_aes()
a1 <- animate(anim1, fps = 30, duration = 15, width = 700, height = 550, end_pause = 75)
anim_save('output/pop1.gif', animation = a1)
rolling_births_deaths <-
population_life %>% arrange(season)%>%
group_by(season,status)%>%
summarise(n = sum(n)) %>%
group_by(status) %>%
filter(status %in% c("Birth","Death")) %>%
mutate(nsum = cumsum(n))
anim2 <-
ggplot(rolling_births_deaths)+
geom_col(aes(x=status,y=nsum,fill = status))+
scale_fill_manual(values = fill_colours[c(2,4)])+
labs(x = "Population status",
y = "Cumulative number")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15))+
scale_y_continuous(expand = c(0,0),
breaks = breaks_pretty(10))+
transition_time(season)+
ease_aes()
a2 <- animate(anim2, fps = 30, duration = 15,width = 250, height = 550, end_pause = 75)
anim_save('output/pop2.gif', animation = a2)
a_mgif <- image_read(a1)
b_mgif <- image_read(a2)
new_gif <- image_append(c(a_mgif[1], b_mgif[1]))
for(i in 1:600){
combined <- image_append(c(a_mgif[i], b_mgif[i]))
new_gif <- c(new_gif, combined)
}
image_write(new_gif,path = "output/pop4.gif", format = 'gif')
## Cohort construction
library(tidyverse)
library(ggplot2)
library(fitzRoy)
library(glue)
library(patchwork)
library(lubridate)
library(gganimate)
library(transformr)
library(zoo)
library(magick)
library(scales)
player_details <- readRDS(file = "data/player_details_2022.rds")
player_stats <- readRDS(file = "data/player_stats_2022.rds")
today <- lubridate::as_date(Sys.Date())
population <- player_details %>%
mutate(age = trunc((dateOfBirth %--% today) / years(1))) %>%
mutate(age = age - (year(today) - season))
population_year_club <-
population %>%
group_by(team,season)%>%
add_count(age)%>%
unique() %>%
group_by(team)%>%
complete(age = seq(min(population$age), max(population$age)),fill = list(n = 0)) %>%
ungroup() %>%
select(team,season,age,n)
population_year <-
population %>%
group_by(season)%>%
add_count(age)%>%
group_by(season)%>%
complete(age = seq(min(population$age), max(population$age)),fill = list(n = 0)) %>%
unique() %>%
select(season,age,n) %>%
unique()
player_stats_afltables <- fitzRoy::fetch_player_details_afltables() %>%
select(Player,Games,Debut,Last) %>%
rename(name = Player) %>%
group_by(name) %>%
filter(Games == max(Games))
population_merged <-
population %>%
mutate(name = str_c(firstName,surname,sep = " "))%>%
left_join(player_stats_afltables, by = "name") %>%
mutate(Debut = gsub('[d|y]','',Debut),
Last = gsub('[d|y]','',Last))%>%
separate(Debut, c("debut_y","debut_d"))%>%
separate(Last, c("last_y","last_d")) %>%
mutate(across(starts_with('debut'), ~ as.numeric(.)),
across(starts_with('last'), ~ as.numeric(.)),
across(ends_with("_d"), ~ ./365)) %>%
mutate(debut = debut_y + debut_d,
last = last_y + last_d) %>%
select(-debut_y,-debut_d,-last_y,-last_d)
population_life <-
population %>%
mutate(name = str_c(firstName,surname,sep = " "))%>%
group_by(id)%>%
arrange(season)%>%
mutate(duplicated = duplicated(id)) %>%
mutate(status =
case_when(row_number()==1 ~ 'Birth',
row_number()==n() & season != "2023" ~ "Death",
TRUE ~ 'Alive')) %>%
mutate(status = case_when(n()==1 & season != "2023"  ~ "BirthDeath",
TRUE ~ status)) %>%
ungroup() %>%
group_by(season,age,status) %>%
summarise(n = n()) %>%
ungroup()%>%
complete(season,age,status,fill = list(n = 0)) %>%
select(age,season,status,n)%>%
unique() %>%
filter(season != "2014") %>%
ungroup()
fill_colours <- c(
Alive = "#0072B2",
Birth = "#009E73",
BirthDeath = "#E69F00",
Death = "#D55E00")
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 11,
colour = "black"),
plot.title  = element_text(size = 14, face = "bold"),
title = element_text(size = 12))+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))
anim1 <-
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status",
caption = "@BenCochraneR")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
plot.caption =  element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0), breaks = breaks_pretty(8))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))+
transition_time(season)+
ease_aes()
a1 <- animate(anim1, fps = 30, duration = 15, width = 650, height = 500, end_pause = 75)
anim_save('output/pop1.gif', animation = a1)
rolling_births_deaths <-
population_life %>% arrange(season)%>%
group_by(season,status)%>%
summarise(n = sum(n)) %>%
group_by(status) %>%
filter(status %in% c("Birth","Death")) %>%
mutate(nsum = cumsum(n))
anim2 <-
ggplot(rolling_births_deaths)+
geom_col(aes(x=status,y=nsum,fill = status))+
scale_fill_manual(values = fill_colours[c(2,4)])+
labs(x = "Population status",
y = "Cumulative number")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0),
breaks = breaks_pretty(10))+
transition_time(season)+
ease_aes()
a2 <- animate(anim2, fps = 30, duration = 15,width = 250, height = 500, end_pause = 75)
anim_save('output/pop2.gif', animation = a2)
a_mgif <- image_read(a1)
b_mgif <- image_read(a2)
new_gif <- image_append(c(a_mgif[1], b_mgif[1]))
for(i in 1:600){
combined <- image_append(c(a_mgif[i], b_mgif[i]))
new_gif <- c(new_gif, combined)
}
image_write(new_gif,path = "output/pop4.gif", format = 'gif')
anim1 <-
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status",
caption = "@BenCochraneR")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
plot.caption =  element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0), breaks = breaks_pretty(8))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))+
transition_time(season)+
ease_aes()
a1 <- animate(anim1, fps = 45, duration = 15, width = 700, height = 550, end_pause = 75)
anim_save('output/pop1.gif', animation = a1)
anim1 <-
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status",
caption = "@BenCochraneR")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
plot.caption =  element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0), breaks = breaks_pretty(8))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))+
transition_time(season)+
ease_aes()
a1 <- animate(anim1, fps = 55, duration = 15, width = 750, height = 600, end_pause = 75)
anim_save('output/pop1.gif', animation = a1)
complete(age = seq(min(population$age), max(population$age)),fill = list(n = 0)) %>%
unique() %>%
select(season,age,n) %>%
unique()
player_stats_afltables <- fitzRoy::fetch_player_details_afltables() %>%
select(Player,Games,Debut,Last) %>%
rename(name = Player) %>%
group_by(name) %>%
filter(Games == max(Games))
population_merged <-
population %>%
mutate(name = str_c(firstName,surname,sep = " "))%>%
left_join(player_stats_afltables, by = "name") %>%
mutate(Debut = gsub('[d|y]','',Debut),
Last = gsub('[d|y]','',Last))%>%
separate(Debut, c("debut_y","debut_d"))%>%
separate(Last, c("last_y","last_d")) %>%
mutate(across(starts_with('debut'), ~ as.numeric(.)),
across(starts_with('last'), ~ as.numeric(.)),
across(ends_with("_d"), ~ ./365)) %>%
mutate(debut = debut_y + debut_d,
last = last_y + last_d) %>%
select(-debut_y,-debut_d,-last_y,-last_d)
population_life <-
population %>%
mutate(name = str_c(firstName,surname,sep = " "))%>%
group_by(id)%>%
arrange(season)%>%
mutate(duplicated = duplicated(id)) %>%
mutate(status =
case_when(row_number()==1 ~ 'Birth',
row_number()==n() & season != "2023" ~ "Death",
TRUE ~ 'Alive')) %>%
mutate(status = case_when(n()==1 & season != "2023"  ~ "BirthDeath",
TRUE ~ status)) %>%
ungroup() %>%
group_by(season,age,status) %>%
summarise(n = n()) %>%
ungroup()%>%
complete(season,age,status,fill = list(n = 0)) %>%
select(age,season,status,n)%>%
unique() %>%
filter(season != "2014") %>%
ungroup()
fill_colours <- c(
Alive = "#0072B2",
Birth = "#009E73",
BirthDeath = "#E69F00",
Death = "#D55E00")
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 11,
colour = "black"),
plot.title  = element_text(size = 14, face = "bold"),
title = element_text(size = 12))+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))
anim1 <-
ggplot(population_life)+
geom_col(aes(x=age, y = n, fill = status)) +
scale_fill_manual(values = fill_colours)+
labs(title = 'AFL Population - Year: {frame_time}',
x = "Age",
y = "Population",
fill = "Population status",
caption = "@BenCochraneR")+
theme_classic()+
theme(legend.position="bottom",
axis.text = element_text(size = 13,
colour = "black"),
plot.title  = element_text(size = 16, face = "bold"),
title = element_text(size = 15),
plot.caption =  element_text(size = 15),
legend.text = element_text(size = 15))+
scale_y_continuous(expand = c(0,0), breaks = breaks_pretty(8))+
scale_x_continuous(breaks = c(18:40), expand = c(0.025,0))+
transition_time(season)+
ease_aes()
a1 <- animate(anim1, fps = 40, duration = 15, width = 750, height = 600, end_pause = 75)
anim_save('output/pop1.gif', animation = a1)
